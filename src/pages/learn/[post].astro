---
import { getCollection } from 'astro:content';
import Layout from '@/layouts/Layout.astro';
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';
import Tags from '@/components/Tags.astro';
import FormattedDate from '@/components/FormattedDate.astro';
// import Sidebar from '@/components/Sidebar.astro';
import SocialShare from '@/components/socialshare/SocialShare.astro';

export async function getStaticPaths() {
  const posts = await getCollection('learn');
  return posts.map((post: any) => ({
    params: { post: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
const images = import.meta.glob<{ default: ImageMetadata }>('../../assets/images/*');

const path = Astro.url.href;
---

<Layout title="test" description="test" image="atest">
  <div class="container">
    <div class="post-layout">
      <!-- grid item main content -->
      <div class="content">
        <h1>{post.data.title}</h1>
        <div class="image-wrapper">
          <Image class="image" src={images[`../../assets/images/${post.data.image}`]()} alt={''} />
        </div>
        <div class="details">
          <div class="post-author">
            Written by <a href="todo: link to author">{post.data.author}</a> â€¢
            <FormattedDate date={post.data.date} />
          </div>
          <Tags tags={post.data.tags} />
          <div class="social-wrapper">
            <!-- todo:pass in an image -->
            <SocialShare description={post.data.description} title="Page Title" url={path} />
          </div>
        </div>
        <Content />
        <a href="#main">Back to Top</a>
      </div>
      <!-- grid item sidebar -->
      <!-- <div class="sidebar">
        <Sidebar />
      </div> -->
      <!-- todo: make a related posts -->
    </div>
  </div>
</Layout>

<style lang="scss">
  @use '../../styles/base.scss';

  .social-wrapper {
    // display: flex;
    // flex-direction: row;
    // height: 20px;
  }

  .image-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: var(--space-sm);
  }
  .image {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .details {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
    padding: var(--space-sm) 0;
    border-bottom: solid 1px lightgray;
  }

  h1 {
    margin: 0;
    margin-bottom: var(--space-md);
  }

  .post-layout {
    display: grid;
    margin: 0 auto;
    grid-template-columns: 1fr;

    @media (min-width: base.$lg) {
      max-width: 70%;
      // display: grid;
      // grid-template-columns: repeat(12, minmax(0, 1fr));
      // .content {
      //   grid-column: span 8;
      // }
      // .sidebar {
      //   grid-column: span 4;
      // }
    }
  }
</style>
// grid-column: span 4; // } } }

